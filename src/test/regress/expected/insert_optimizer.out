--
-- insert with DEFAULT in the target_list
--
create table inserttest (col1 int4, col2 int4 NOT NULL, col3 text default 'testing');
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'col1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into inserttest (col1, col2, col3) values (DEFAULT, DEFAULT, DEFAULT);
ERROR:  NULL value in column "col2" violates not-null constraint (COptTasks.cpp:1688)
insert into inserttest (col2, col3) values (3, DEFAULT);
insert into inserttest (col1, col2, col3) values (DEFAULT, 5, DEFAULT);
insert into inserttest values (DEFAULT, 5, 'test');
insert into inserttest values (DEFAULT, 7);
select * from inserttest order by 1,2,3;
 col1 | col2 |  col3   
------+------+---------
      |    3 | testing
      |    5 | test
      |    5 | testing
      |    7 | testing
(4 rows)

--
-- insert with similar expression / target_list values (all fail)
--
insert into inserttest (col1, col2, col3) values (DEFAULT, DEFAULT);
ERROR:  INSERT has more target columns than expressions
insert into inserttest (col1, col2, col3) values (1, 2);
ERROR:  INSERT has more target columns than expressions
insert into inserttest (col1) values (1, 2);
ERROR:  INSERT has more expressions than target columns
insert into inserttest (col1) values (DEFAULT, DEFAULT);
ERROR:  INSERT has more expressions than target columns
select * from inserttest order by 1,2,3;
 col1 | col2 |  col3   
------+------+---------
      |    3 | testing
      |    5 | test
      |    5 | testing
      |    7 | testing
(4 rows)

--
-- VALUES test
--
insert into inserttest values(10, 20, '40'), (-1, 2, DEFAULT),
    ((select 2), (select i from (values(3)) as foo (i)), 'values are fun!');
select * from inserttest order by 1,2,3;
 col1 | col2 |      col3       
------+------+-----------------
   -1 |    2 | testing
    2 |    3 | values are fun!
   10 |   20 | 40
      |    3 | testing
      |    5 | test
      |    5 | testing
      |    7 | testing
(7 rows)

drop table inserttest;
-- MPP-6775 : Adding and dropping a column. Then perform an insert.
 
create table bar(x int) distributed randomly;        
create table foo(like bar) distributed randomly;
alter table foo add column y int;
ERROR:  ADD COLUMN with no default value in append-only tables is not yet supported.
alter table foo drop column y;
ERROR:  column "y" of relation "foo" does not exist
insert into bar values(1);
insert into bar values(2);
insert into foo(x) select  t1.x from    bar t1 join bar t2 on t1.x=t2.x;
insert into foo(x) select  t1.x from    bar t1;
insert into foo(x) select  t1.x from    bar t1 group by t1.x;
drop table if exists foo;
drop table if exists bar;
-- MPP-6775 : Dropping a column. Then perform an insert.
create table bar(x int, y int) distributed randomly;        
create table foo(like bar) distributed randomly;
alter table foo drop column y;
insert into bar values(1,1);
insert into bar values(2,2);
insert into foo(x) select  t1.x from    bar t1 join bar t2 on t1.x=t2.x;
insert into foo(x) select  t1.x from    bar t1;
insert into foo(x) select  t1.x from    bar t1 group by t1.x;
drop table if exists foo;
drop table if exists bar;
-- GPSQL-221
BEGIN;
CREATE TABLE mpp14758(a int) with (appendonly=true);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO mpp14758 select * from generate_series(1,10);
ABORT;
