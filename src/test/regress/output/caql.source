-- --------------------------------------
-- caql
-- --------------------------------------
-- *********************************************************************
-- *********************************************************************
-- This script will produce diffs if you add or change caql/cql
-- definitions in src/. If you want to change the results, you must
-- make the changes in regress/output/caql.source, not
-- regress/expected, and use gpsourcify.pl to generate a ".source"
-- file.
--
-- From the regress directory invoke the command:
--
--    gpsourcify.pl results/caql.out  > output/caql.source
--
-- *********************************************************************
-- *********************************************************************
-- *********************************************************************
-- *********************************************************************
-- caql testing
--
-- caql.md5 contains hash codes for compiled caql modules
--
CREATE EXTERNAL WEB TABLE compiled_caql_x (mod text, hsh text)
execute E'(cat @abs_srcdir@/../../backend/catalog/caql/caql.md5 | perl -nle \'my @foo=split("/", $_); print $foo[-2]."/".$foo[-1]\' | sed "s/)=/|/" | sort ) ' on MASTER format 'text' (delimiter '|');
--
-- build hash codes for current set of caql modules
--
CREATE EXTERNAL WEB TABLE current_caql_x (mod text, hsh text)
execute E'(find @abs_srcdir@/../../.. -name \'*.c\' | xargs grep -l cql | grep -v catquery | grep -v mock/backend | xargs openssl dgst -md5 -hex | perl -nle \'my @foo =split("/", $_); print $foo[-2]."/".$foo[-1]\' | sed "s/)=/|/" | sort ) ' on MASTER format 'text' (delimiter '|');
create table caql1 as select * from compiled_caql_x;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'mod' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table caql2 as select * from current_caql_x;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'mod' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
-- make sure non-zero rows
select 'got some rows' from caql1 limit 1;
   ?column?    
---------------
 got some rows
(1 row)

--
-- make sure compiled code matches current -- no rows should be returned
--
select * from caql1 except select * from caql2;
 mod | hsh 
-----+-----
(0 rows)

select * from caql2 except select * from caql1;
 mod | hsh 
-----+-----
(0 rows)

-- dump the rows for debugging (but ignore)
-- start_ignore
select * from caql1;
               mod               |                hsh                
---------------------------------+-----------------------------------
 adt/acl.c                       |  605398fc1dfe37cd4e6d05ed36738acc
 adt/regproc.c                   |  849bc20f82c1e9067944a5d3005d42cb
 cache/relcache.c                |  93dd297ad278e58b84a15359cc9b2ff6
 catalog/aclchk.c                |  8342c98903309011477e51a4e51000c9
 catalog/heap.c                  |  d4a055867541d8472db2e1760fca5dbb
 catalog/index.c                 |  7ac28065b36c82a7a6d6cc1ffbbddad8
 catalog/pg_appendonly.c         |  86d796d54a277f76caa8d9044ea9aec4
 catalog/pg_attribute_encoding.c |  c429a4cc0ad2042b8a63a957e8485e87
 catalog/pg_compression.c        |  ff94f49700cd769b2d047e4051b8b7a9
 catalog/pg_conversion.c         |  e67b161334b39fac4e074f8e725a60a3
 catalog/pg_depend.c             |  df2ccb2474bce5c598f7e7b097d4dbaa
 catalog/pg_largeobject.c        |  98e5bbb0bc24bd19115a7b5984ab1791
 catalog/pg_operator.c           |  fadec837920effb6ec3406fbc841800e
 catalog/pg_proc.c               |  0d54089cff40bbf82e46d5cbd196a18b
 catalog/pg_proc_callback.c      |  6318ae99c9084542748333bbe3c9483e
 catalog/pg_type.c               |  2a323aac38abc2d1d0e9a159d7a71587
 cdb/cdbfts.c                    |  b99ef4b438329fcdd6c22717983017ce
 cdb/cdbtm.c                     |  9a1f4d2b497d2f797f4574e817e00950
 commands/comment.c              |  982abe82b1194a6bed7f710265ce3709
 commands/conversioncmds.c       |  b195b6c207ff48ef48257e12ef3db81a
 commands/foreigncmds.c          |  0cd40626e6948e5eabf0eedc87378856
 commands/functioncmds.c         |  776a2ca0c6985c5606a0f259503a1bc9
 commands/indexcmds.c            |  b31af7afcf36f399e8455cb5b06945cb
 commands/operatorcmds.c         |  1fce8ac406e14958b6f20c80d14556ac
 commands/queue.c                |  3214f80d7c3cc923b17bc4d5eaee113b
 commands/sequence.c             |  986f8c38bebe0df9735767339dfd3dcf
 commands/tablecmds.c            |  c19bfd00107723da9daad1c513fe541b
 commands/typecmds.c             |  79133a0f0cc549daaa0b8a69aaf4f63b
 commands/user.c                 |  fb1c5144dda39658d0601f5c9b0520a2
 commands/vacuum.c               |  a1ec704a4d9b815d773b463ecc1b079a
 gp/segadmin.c                   |  878c6c1c0468c04ef9eb925d120697b7
 large_object/inv_api.c          |  33e1338710922cef0304f950b7970388
 parser/analyze.c                |  e0b373e547b26c32b1433fcd70df859e
 parser/parse_func.c             |  c1202e0250592903a6103742b2d1efb9
 parser/parse_relation.c         |  256a6529171f6cdb18985c02e750f7ba
 parser/parse_type.c             |  9fca02ebb70475836ca1996684e72904
 rewrite/rewriteDefine.c         |  11048426e057a9a5714e0548a483f771
 rewrite/rewriteSupport.c        |  30ce266b6bf7000f66dcf50419f30c82
 util/plancat.c                  |  2588a9a57f3594005335eed442279045
 adt/dbsize.c                    |  817db90d6ec9a46ed53fe61b26a3718e
 adt/ruleutils.c                 |  10ba14a0fd44cc0f69256271501dbaa6
 catalog/dependency.c            |  0aae2d29dee32b9243e94592279f17ae
 catalog/gp_fastsequence.c       |  2c574d81d860568fbd8bedfb8565b3b0
 catalog/namespace.c             |  965d062be47902d03d467d0227701df1
 catalog/pg_aggregate.c          |  15cfb14c3afdad0fe38f3915aa2b6ecf
 catalog/pg_constraint.c         |  372f613de87f8f10e99e790e6052590e
 catalog/pg_extprotocol.c        |  4424804be94b495a2dde469945c04fc2
 catalog/pg_exttable.c           |  08c2a1cb8a183ad42e038238596085c9
 catalog/pg_namespace.c          |  cfe58c0c170fb49778eaf064c62b0963
 catalog/pg_shdepend.c           |  f1b3b93615282b2cb578f18201e9d561
 cdb/cdbcat.c                    |  bb791a1c421e640e79f5a97e102cbbc9
 cdb/cdbpartition.c              |  1737ff46a1be6cf358910d9d7df2e809
 cdb/cdbutil.c                   |  6d9be21597a8faedf3740fe5a944213b
 commands/aggregatecmds.c        |  2ce35f0f506c494030a54f7d5d78bec6
 commands/analyze.c              |  17e95bc0aeacd2197401fa627c18583b
 commands/async.c                |  e52c0b97c5d93309f04996badc310a35
 commands/cluster.c              |  62dde6aabfc1db7766911fef86398c7c
 commands/dbcommands.c           |  9b2a9165000e8d3c5b8125d108993f5a
 commands/extprotocolcmds.c      |  f1fdffe504d5e95f06f26304aa8c7a10
 commands/filespace.c            |  bff5446f10e4ebc0cec4f1bed290cdc5
 commands/opclasscmds.c          |  37f0117238438ed25d726fd9a1fa0b46
 commands/proclang.c             |  1d6f71560f18466db0764e10a383a194
 commands/schemacmds.c           |  2a51fb48d63073bbc1cf863e6b94845e
 commands/tablespace.c           |  0a4533bc9a681188a7f04a48014dd69c
 commands/trigger.c              |  0e34b4ac36694fcc30e2673f83ef4d68
 foreign/foreign.c               |  4bf56962ceef3feb6363b8d0b53e4e5b
 fts/fts.c                       |  73740f51e40cfd53c1aa3ba2b00f8685
 postmaster/autovacuum.c         |  4e920e5ea3b259acea0f59b37effd864
 resscheduler/resscheduler.c     |  d47caf2eb447ce88d297414eedac22cb
 rewrite/rewriteRemove.c         |  c95c8732de66b9faccd206dffba0507b
(70 rows)

select * from caql2;
               mod               |                hsh                
---------------------------------+-----------------------------------
 adt/dbsize.c                    |  817db90d6ec9a46ed53fe61b26a3718e
 adt/ruleutils.c                 |  10ba14a0fd44cc0f69256271501dbaa6
 catalog/dependency.c            |  0aae2d29dee32b9243e94592279f17ae
 catalog/gp_fastsequence.c       |  2c574d81d860568fbd8bedfb8565b3b0
 catalog/namespace.c             |  965d062be47902d03d467d0227701df1
 catalog/pg_aggregate.c          |  15cfb14c3afdad0fe38f3915aa2b6ecf
 catalog/pg_constraint.c         |  372f613de87f8f10e99e790e6052590e
 catalog/pg_extprotocol.c        |  4424804be94b495a2dde469945c04fc2
 catalog/pg_exttable.c           |  08c2a1cb8a183ad42e038238596085c9
 catalog/pg_namespace.c          |  cfe58c0c170fb49778eaf064c62b0963
 catalog/pg_shdepend.c           |  f1b3b93615282b2cb578f18201e9d561
 cdb/cdbcat.c                    |  bb791a1c421e640e79f5a97e102cbbc9
 cdb/cdbpartition.c              |  1737ff46a1be6cf358910d9d7df2e809
 cdb/cdbutil.c                   |  6d9be21597a8faedf3740fe5a944213b
 commands/aggregatecmds.c        |  2ce35f0f506c494030a54f7d5d78bec6
 commands/analyze.c              |  17e95bc0aeacd2197401fa627c18583b
 commands/async.c                |  e52c0b97c5d93309f04996badc310a35
 commands/cluster.c              |  62dde6aabfc1db7766911fef86398c7c
 commands/dbcommands.c           |  9b2a9165000e8d3c5b8125d108993f5a
 commands/extprotocolcmds.c      |  f1fdffe504d5e95f06f26304aa8c7a10
 commands/filespace.c            |  bff5446f10e4ebc0cec4f1bed290cdc5
 commands/opclasscmds.c          |  37f0117238438ed25d726fd9a1fa0b46
 commands/proclang.c             |  1d6f71560f18466db0764e10a383a194
 commands/schemacmds.c           |  2a51fb48d63073bbc1cf863e6b94845e
 commands/tablespace.c           |  0a4533bc9a681188a7f04a48014dd69c
 commands/trigger.c              |  0e34b4ac36694fcc30e2673f83ef4d68
 foreign/foreign.c               |  4bf56962ceef3feb6363b8d0b53e4e5b
 fts/fts.c                       |  73740f51e40cfd53c1aa3ba2b00f8685
 postmaster/autovacuum.c         |  4e920e5ea3b259acea0f59b37effd864
 resscheduler/resscheduler.c     |  d47caf2eb447ce88d297414eedac22cb
 rewrite/rewriteRemove.c         |  c95c8732de66b9faccd206dffba0507b
 adt/acl.c                       |  605398fc1dfe37cd4e6d05ed36738acc
 adt/regproc.c                   |  849bc20f82c1e9067944a5d3005d42cb
 cache/relcache.c                |  93dd297ad278e58b84a15359cc9b2ff6
 catalog/aclchk.c                |  8342c98903309011477e51a4e51000c9
 catalog/heap.c                  |  d4a055867541d8472db2e1760fca5dbb
 catalog/index.c                 |  7ac28065b36c82a7a6d6cc1ffbbddad8
 catalog/pg_appendonly.c         |  86d796d54a277f76caa8d9044ea9aec4
 catalog/pg_attribute_encoding.c |  c429a4cc0ad2042b8a63a957e8485e87
 catalog/pg_compression.c        |  ff94f49700cd769b2d047e4051b8b7a9
 catalog/pg_conversion.c         |  e67b161334b39fac4e074f8e725a60a3
 catalog/pg_depend.c             |  df2ccb2474bce5c598f7e7b097d4dbaa
 catalog/pg_largeobject.c        |  98e5bbb0bc24bd19115a7b5984ab1791
 catalog/pg_operator.c           |  fadec837920effb6ec3406fbc841800e
 catalog/pg_proc.c               |  0d54089cff40bbf82e46d5cbd196a18b
 catalog/pg_proc_callback.c      |  6318ae99c9084542748333bbe3c9483e
 catalog/pg_type.c               |  2a323aac38abc2d1d0e9a159d7a71587
 cdb/cdbfts.c                    |  b99ef4b438329fcdd6c22717983017ce
 cdb/cdbtm.c                     |  9a1f4d2b497d2f797f4574e817e00950
 commands/comment.c              |  982abe82b1194a6bed7f710265ce3709
 commands/conversioncmds.c       |  b195b6c207ff48ef48257e12ef3db81a
 commands/foreigncmds.c          |  0cd40626e6948e5eabf0eedc87378856
 commands/functioncmds.c         |  776a2ca0c6985c5606a0f259503a1bc9
 commands/indexcmds.c            |  b31af7afcf36f399e8455cb5b06945cb
 commands/operatorcmds.c         |  1fce8ac406e14958b6f20c80d14556ac
 commands/queue.c                |  3214f80d7c3cc923b17bc4d5eaee113b
 commands/sequence.c             |  986f8c38bebe0df9735767339dfd3dcf
 commands/tablecmds.c            |  c19bfd00107723da9daad1c513fe541b
 commands/typecmds.c             |  79133a0f0cc549daaa0b8a69aaf4f63b
 commands/user.c                 |  fb1c5144dda39658d0601f5c9b0520a2
 commands/vacuum.c               |  a1ec704a4d9b815d773b463ecc1b079a
 gp/segadmin.c                   |  878c6c1c0468c04ef9eb925d120697b7
 large_object/inv_api.c          |  33e1338710922cef0304f950b7970388
 parser/analyze.c                |  e0b373e547b26c32b1433fcd70df859e
 parser/parse_func.c             |  c1202e0250592903a6103742b2d1efb9
 parser/parse_relation.c         |  256a6529171f6cdb18985c02e750f7ba
 parser/parse_type.c             |  9fca02ebb70475836ca1996684e72904
 rewrite/rewriteDefine.c         |  11048426e057a9a5714e0548a483f771
 rewrite/rewriteSupport.c        |  30ce266b6bf7000f66dcf50419f30c82
 util/plancat.c                  |  2588a9a57f3594005335eed442279045
(70 rows)

-- end_ignore
-- cleanup
drop table caql1;
drop table caql2;
drop external web table compiled_caql_x;
drop external web table current_caql_x;
-- extra catalog coverage
create user caql_luser;
NOTICE:  resource queue required -- using default resource queue "pg_default"
create user caql_super_luser SUPERUSER;
set role caql_luser;
-- create a role as an unpriv user (shouldn't work)
create role caql_fff;
NOTICE:  resource queue required -- using default resource queue "pg_default"
ERROR:  permission denied to create role
drop role if exists caql_fff ;
ERROR:  permission denied to drop role
-- create and comment on an operator and an operator class
create operator #~#~#
(
   rightarg = int8,              -- right unary
   procedure = numeric_fac
);
comment on operator #~#~# (int8, NONE) is 'bad operator';
ERROR:  operator does not exist: bigint #~#~#
comment on operator #~#~# (NONE, int8) is 'bad operator';
drop operator #~#~# (int8, NONE);
ERROR:  operator does not exist: bigint #~#~#
drop operator #~#~# (NONE, int8 );
-- try (and fail) renaming a language
alter LANGUAGE plpgsql RENAME TO funky;
ERROR:  must be superuser to rename procedural language
select has_language_privilege('caql_luser', 14, 'USAGE');
 has_language_privilege 
------------------------
 t
(1 row)

select has_language_privilege('caql_luser', 14, 'USAGE WITH GRANT OPTION');
 has_language_privilege 
------------------------
 f
(1 row)

-- need privs to create op class and comment on language
set role caql_super_luser;
create operator class myi2ops 
 for type int2 using btree as
        OPERATOR        1       < ,
        OPERATOR        2       <= ,
        OPERATOR        3       = ,
        OPERATOR        4       >= ,
        OPERATOR        5       > ,
        FUNCTION        1       btint2cmp(int2, int2);
comment on operator class myi2ops using btree is 'wow';
drop operator class myi2ops using btree;
comment on language sql is 'wow';
comment on language sql is null;
select has_language_privilege('caql_luser', 14, 'USAGE');
 has_language_privilege 
------------------------
 t
(1 row)

select has_language_privilege('caql_luser', 14, 'USAGE WITH GRANT OPTION');
 has_language_privilege 
------------------------
 f
(1 row)

select has_language_privilege('caql_super_luser', 14, 'USAGE');
 has_language_privilege 
------------------------
 t
(1 row)

select has_language_privilege('caql_super_luser', 14, 'USAGE WITH GRANT OPTION');
 has_language_privilege 
------------------------
 t
(1 row)

-- no privs
set role caql_luser;
CREATE or replace FUNCTION caql_timestamp(float8)
RETURNS pg_catalog.timestamptz
LANGUAGE sql CONTAINS SQL
IMMUTABLE STRICT AS $$select ('epoch'::timestamptz + $1 * '1 second'::interval)$$;
CREATE or replace FUNCTION caql_timestamp(float8)
RETURNS pg_catalog.timestamptz
LANGUAGE sql CONTAINS SQL
IMMUTABLE STRICT AS $$select ('epoch'::timestamptz + $1 * '1 second'::interval)$$;
CREATE TABLE log_table (tstamp timestamp default timeofday()::timestamp);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'tstamp' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE main_table (a int, b int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE FUNCTION trigger_func() RETURNS trigger LANGUAGE plpgsql NO SQL AS '
BEGIN
        RAISE NOTICE ''trigger_func() called: action = %, when = %, level = %'',
		TG_OP, TG_WHEN, TG_LEVEL;
        RETURN NULL;
END;';
CREATE TRIGGER before_ins_stmt_trig BEFORE INSERT ON main_table
FOR EACH STATEMENT EXECUTE PROCEDURE trigger_func();
comment on trigger before_ins_stmt_trig on main_table is 'wow';
-- rename of columns recurses to triggers
alter table main_table rename a to aaa;
alter table main_table rename b to bbb;
drop trigger before_ins_stmt_trig on main_table;
create table rtest_t1 (a int4, b int4);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create view rtest_v1 as select * from rtest_t1;
create rule rtest_v1_ins as on insert to rtest_v1 do instead
        insert into rtest_t1 values (new.a, new.b);
comment on rule rtest_v1_ins is 'wow';
comment on rule rtest_v1_ins on rtest_v1 is 'ok';
set constraints all deferred;
set constraints funky deferred;
ERROR:  constraint "funky" does not exist
-- start_ignore
-- need to ignore warnings for objects caql_luser does not own...
vacuum;
WARNING:  skipping "sql_packages" --- only table or database owner can vacuum it
WARNING:  skipping "sql_parts" --- only table or database owner can vacuum it
WARNING:  skipping "sql_sizing" --- only table or database owner can vacuum it
WARNING:  skipping "sql_sizing_profiles" --- only table or database owner can vacuum it
WARNING:  skipping "pg_window" --- only table or database owner can vacuum it
WARNING:  skipping "pg_exttable" --- only table or database owner can vacuum it
WARNING:  skipping "pg_appendonly" --- only table or database owner can vacuum it
WARNING:  skipping "pg_appendonly_alter_column" --- only table or database owner can vacuum it
WARNING:  skipping "gp_master_mirroring" --- only table or database owner can vacuum it
WARNING:  skipping "gp_fastsequence" --- only table or database owner can vacuum it
WARNING:  skipping "pg_extprotocol" --- only table or database owner can vacuum it
WARNING:  skipping "pg_partition" --- only table or database owner can vacuum it
WARNING:  skipping "pg_partition_rule" --- only table or database owner can vacuum it
WARNING:  skipping "pg_filespace" --- only table or database owner can vacuum it
WARNING:  skipping "pg_filespace_entry" --- only table or database owner can vacuum it
WARNING:  skipping "gp_global_sequence" --- only table or database owner can vacuum it
WARNING:  skipping "gp_persistent_relation_node" --- only table or database owner can vacuum it
WARNING:  skipping "gp_relation_node" --- only table or database owner can vacuum it
WARNING:  skipping "gp_persistent_database_node" --- only table or database owner can vacuum it
WARNING:  skipping "gp_persistent_tablespace_node" --- only table or database owner can vacuum it
WARNING:  skipping "gp_persistent_filespace_node" --- only table or database owner can vacuum it
WARNING:  skipping "pg_attribute_encoding" --- only table or database owner can vacuum it
WARNING:  skipping "pg_compression" --- only table or database owner can vacuum it
WARNING:  skipping "pg_foreign_data_wrapper" --- only table or database owner can vacuum it
WARNING:  skipping "pg_foreign_server" --- only table or database owner can vacuum it
WARNING:  skipping "pg_foreign_table" --- only table or database owner can vacuum it
WARNING:  skipping "pg_proc_callback" --- only table or database owner can vacuum it
WARNING:  skipping "pg_partition_encoding" --- only table or database owner can vacuum it
WARNING:  skipping "pg_type_encoding" --- only table or database owner can vacuum it
WARNING:  skipping "pg_database" --- only table or database owner can vacuum it
WARNING:  skipping "pg_auth_members" --- only table or database owner can vacuum it
WARNING:  skipping "pg_auth_time_constraint" --- only table or database owner can vacuum it
WARNING:  skipping "pg_authid" --- only table or database owner can vacuum it
WARNING:  skipping "pg_statistic" --- only table or database owner can vacuum it
WARNING:  skipping "sql_features" --- only table or database owner can vacuum it
WARNING:  skipping "sql_implementation_info" --- only table or database owner can vacuum it
WARNING:  skipping "sql_languages" --- only table or database owner can vacuum it
WARNING:  skipping "pg_user_mapping" --- only table or database owner can vacuum it
WARNING:  skipping "pg_type" --- only table or database owner can vacuum it
WARNING:  skipping "pg_attribute" --- only table or database owner can vacuum it
WARNING:  skipping "pg_proc" --- only table or database owner can vacuum it
WARNING:  skipping "pg_class" --- only table or database owner can vacuum it
WARNING:  skipping "pg_autovacuum" --- only table or database owner can vacuum it
WARNING:  skipping "pg_attrdef" --- only table or database owner can vacuum it
WARNING:  skipping "pg_constraint" --- only table or database owner can vacuum it
WARNING:  skipping "pg_inherits" --- only table or database owner can vacuum it
WARNING:  skipping "pg_index" --- only table or database owner can vacuum it
WARNING:  skipping "pg_operator" --- only table or database owner can vacuum it
WARNING:  skipping "pg_opclass" --- only table or database owner can vacuum it
WARNING:  skipping "pg_am" --- only table or database owner can vacuum it
WARNING:  skipping "pg_amop" --- only table or database owner can vacuum it
WARNING:  skipping "pg_amproc" --- only table or database owner can vacuum it
WARNING:  skipping "pg_language" --- only table or database owner can vacuum it
WARNING:  skipping "pg_largeobject" --- only table or database owner can vacuum it
WARNING:  skipping "pg_aggregate" --- only table or database owner can vacuum it
WARNING:  skipping "pg_stat_last_operation" --- only table or database owner can vacuum it
WARNING:  skipping "pg_stat_last_shoperation" --- only table or database owner can vacuum it
WARNING:  skipping "pg_rewrite" --- only table or database owner can vacuum it
WARNING:  skipping "pg_trigger" --- only table or database owner can vacuum it
WARNING:  skipping "pg_listener" --- only table or database owner can vacuum it
WARNING:  skipping "pg_description" --- only table or database owner can vacuum it
WARNING:  skipping "pg_cast" --- only table or database owner can vacuum it
WARNING:  skipping "pg_namespace" --- only table or database owner can vacuum it
WARNING:  skipping "pg_conversion" --- only table or database owner can vacuum it
WARNING:  skipping "pg_depend" --- only table or database owner can vacuum it
WARNING:  skipping "pg_tablespace" --- only table or database owner can vacuum it
WARNING:  skipping "pg_pltemplate" --- only table or database owner can vacuum it
WARNING:  skipping "pg_shdepend" --- only table or database owner can vacuum it
WARNING:  skipping "pg_shdescription" --- only table or database owner can vacuum it
WARNING:  skipping "pg_resqueue" --- only table or database owner can vacuum it
WARNING:  skipping "pg_resourcetype" --- only table or database owner can vacuum it
WARNING:  skipping "pg_resqueuecapability" --- only table or database owner can vacuum it
WARNING:  skipping "gp_configuration" --- only table or database owner can vacuum it
WARNING:  skipping "gp_configuration_history" --- only table or database owner can vacuum it
WARNING:  skipping "gp_db_interfaces" --- only table or database owner can vacuum it
WARNING:  skipping "gp_interfaces" --- only table or database owner can vacuum it
WARNING:  skipping "gp_distribution_policy" --- only table or database owner can vacuum it
WARNING:  skipping "gp_version_at_initdb" --- only table or database owner can vacuum it
WARNING:  skipping "gp_segment_configuration" --- only table or database owner can vacuum it
WARNING:  skipping "gp_san_configuration" --- only table or database owner can vacuum it
WARNING:  skipping "gp_verification_history" --- only table or database owner can vacuum it
-- end_ignore
vacuum main_table;
vacuum full main_table;
NOTICE:  'VACUUM FULL' is not safe for large tables and has been known to yield unpredictable runtimes.
HINT:  Use 'VACUUM' instead.
analyze main_table;
CREATE TYPE funkytype AS (
       i int
);
CREATE FUNCTION toint(funkytype)
  RETURNS integer
  STRICT IMMUTABLE LANGUAGE SQL CONTAINS SQL AS
'SELECT 1;';
CREATE CAST (funkytype AS integer) WITH FUNCTION toint(funkytype);
comment on cast (funkytype AS integer) is 'wow';
grant all on language sql to caql_luser;
WARNING:  no privileges were granted for "sql"
set role caql_super_luser;
grant all on language sql to caql_luser;
revoke usage on language sql from caql_luser;
CREATE FUNCTION caql_bootstrap_regproc() RETURNS text
  AS '@abs_builddir@/regress@DLSUFFIX@', 'caql_bootstrap_regproc'
  LANGUAGE C READS SQL DATA;
SELECT caql_bootstrap_regproc();
   caql_bootstrap_regproc    
-----------------------------
 
 regclassin(pg_class) = 1259 
 regoperin(#>=) = 580        
 regprocin(boolin) = 1242    
 regtypein(bool) = 16        
(1 row)

DROP FUNCTION caql_bootstrap_regproc();
CREATE FUNCTION check_get_atttypmod(oid, int) RETURNS integer
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_get_atttypmod'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_get_atttypmod(1255, 1);
 check_get_atttypmod 
---------------------
                  -1
(1 row)

DROP FUNCTION check_get_atttypmod(oid, int);
CREATE FUNCTION check_get_opname(oid) RETURNS text
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_get_opname'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_get_opname(15);
 check_get_opname 
------------------
 =
(1 row)

SELECT * FROM check_get_opname(0);
 check_get_opname 
------------------
 
(1 row)

DROP FUNCTION check_get_opname(oid);
CREATE FUNCTION check_get_typ_typrelid(oid) RETURNS oid
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_get_typ_typrelid'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_get_typ_typrelid(1000);
 check_get_typ_typrelid 
------------------------
                      0
(1 row)

DROP FUNCTION check_get_typ_typrelid(oid);
CREATE FUNCTION check_get_base_element_type(oid) RETURNS oid
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_get_base_element_type'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_get_base_element_type(1000);
 check_get_base_element_type 
-----------------------------
                          16
(1 row)

DROP FUNCTION check_get_base_element_type(oid);
CREATE FUNCTION check_SPI_gettype(int4) RETURNS text
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_SPI_gettype'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_SPI_gettype(1);
 check_spi_gettype 
-------------------
 name
(1 row)

DROP FUNCTION check_SPI_gettype(int4);
CREATE FUNCTION check_master_standby_dbid() RETURNS int2
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_master_standby_dbid'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_master_standby_dbid();
 check_master_standby_dbid 
---------------------------
                         0
(1 row)

DROP FUNCTION check_master_standby_dbid();
CREATE FUNCTION check_my_mirror_dbid() RETURNS int2
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_my_mirror_dbid'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_my_mirror_dbid();
 check_my_mirror_dbid 
----------------------
                    0
(1 row)

DROP FUNCTION check_my_mirror_dbid();
CREATE FUNCTION check_dbid_get_dbinfo(int2) RETURNS int2
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_dbid_get_dbinfo'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_dbid_get_dbinfo(1::int2);
 check_dbid_get_dbinfo 
-----------------------
                     1
(1 row)

DROP FUNCTION check_dbid_get_dbinfo(int2);
CREATE FUNCTION check_contentid_get_dbid(int2, "char", bool) RETURNS int2
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_contentid_get_dbid'
  LANGUAGE C READS SQL DATA;
SELECT * FROM check_contentid_get_dbid(-1::int2, 'p', true);
 check_contentid_get_dbid 
--------------------------
                        1
(1 row)

SELECT * FROM check_contentid_get_dbid(-1::int2, 'p', false);
 check_contentid_get_dbid 
--------------------------
                        1
(1 row)

DROP FUNCTION check_contentid_get_dbid(int2, "char", bool);
CREATE FUNCTION check_FtsFindSuperuser(bool) RETURNS text
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_FtsFindSuperuser'
  LANGUAGE C READS SQL DATA;
-- start_ignore
SELECT * FROM check_FtsFindSuperuser(false);
 check_ftsfindsuperuser 
------------------------
 reddyr3
(1 row)
-- end_ignore
DROP FUNCTION check_FtsFindSuperuser(bool);
-- ---------------------------------------------------------------------
-- coverage for segadmin.c/filespace.c
-- ---------------------------------------------------------------------
CREATE FUNCTION check_gp_activate_standby(int2) RETURNS text
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_gp_activate_standby'
  LANGUAGE C READS SQL DATA;
-- we need configuration, but reading the table would hold a lock on it,
-- which blocks the subsequent remove/add operation.
create table gp_segment_configuration_copy as select * from gp_segment_configuration;
create or replace function gp_add_remove_segment() returns text as $$
declare
  lastseg_conf record;
  lastseg_fsentry record;
  newdbid smallint;
  result text;
begin
  select * into lastseg_conf
    from gp_segment_configuration_copy
    where role = 'p' order by dbid desc limit 1;
  select * into lastseg_fsentry
    from pg_filespace_entry
    where fsedbid = lastseg_conf.dbid;

  set gp_role = utility;
  select gp_add_segment(
    lastseg_conf.hostname,
    lastseg_conf.address,
    lastseg_conf.port + 1,
    array['pg_system', lastseg_fsentry.fselocation])
    into newdbid;
  perform gp_remove_segment(newdbid);

  result := 'ok';
  return result;
end;
$$ language plpgsql READS SQL DATA;
select gp_add_remove_segment();
 gp_add_remove_segment 
-----------------------
 ok
(1 row)

-- restore from utility mode
\c regression
drop function gp_add_remove_segment();
create or replace function gp_add_remove_master_standby() returns int2 as $$
declare
  master_conf record;
  fsmap text[];
  rec record;
  i int;
  result int2;
begin
  select * into master_conf
    from gp_segment_configuration_copy
    where role = 'p' and dbid = 1;
  i := 1;
  for rec in select *
    from pg_filespace inner join pg_filespace_entry
      on pg_filespace.oid = pg_filespace_entry.fsefsoid
    where fsedbid = 1
  loop
    fsmap[i] = array[rec.fsname, rec.fselocation];
    i := i + 1;
  end loop;

  -- creating a dynamic two-dim array is tricky...
  fsmap := array_in(textout('{'::text ||
                    replace(array_to_string(fsmap, ','), '"', '') ||
                    '}'), 25, -1);

  set gp_role = utility;
  perform gp_add_master_standby(
    master_conf.hostname,
    master_conf.address,
    fsmap);
  perform gp_remove_master_standby();

  -- for gp_activate_standby, add it once more
  select gp_add_master_standby(
    master_conf.hostname,
    master_conf.address,
    fsmap)
    into result;

  return result;
end;
$$ language plpgsql READS SQL DATA;
select check_gp_activate_standby(gp_add_remove_master_standby());
 check_gp_activate_standby 
---------------------------
 
(1 row)

-- restore from utility mode
\c regression
drop table gp_segment_configuration_copy;
drop function gp_add_remove_master_standby();
DROP FUNCTION check_gp_activate_standby(int2);
CREATE FUNCTION check_GetResqueueName(oid) RETURNS text
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_GetResqueueName'
  LANGUAGE C READS SQL DATA;
select check_GetResqueueName(6055);
 check_getresqueuename 
-----------------------
 pg_default
(1 row)

DROP FUNCTION check_GetResqueueName(oid);
CREATE FUNCTION check_GetFuncSQLDataAccess(oid) RETURNS text
  AS '@abs_builddir@/regress@DLSUFFIX@', 'check_GetFuncSQLDataAccess'
  LANGUAGE C READS SQL DATA;
select check_GetFuncSQLDataAccess('check_GetFuncSQLDataAccess'::regproc);
 check_getfuncsqldataaccess 
----------------------------
 READS SQL DATA
(1 row)

DROP FUNCTION check_GetFuncSQLDataAccess(oid);
-- cleanup (as caql_super_luser)
drop type funkytype;
NOTICE:  cast from funkytype to integer depends on type funkytype
NOTICE:  function toint(funkytype) depends on type funkytype
ERROR:  cannot drop type funkytype because other objects depend on it
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
-- need the cascade to the cast
drop type funkytype cascade;
NOTICE:  drop cascades to cast from funkytype to integer
NOTICE:  drop cascades to function toint(funkytype)
-- should be superfluous after the cascade
DROP CAST (funkytype AS integer) ;
ERROR:  type "funkytype" does not exist
drop table main_table cascade;
drop table log_table cascade;
drop table rtest_t1 cascade;
NOTICE:  drop cascades to rule rtest_v1_ins on view rtest_v1
NOTICE:  drop cascades to rule _RETURN on view rtest_v1
NOTICE:  drop cascades to view rtest_v1
drop function trigger_func();
drop function caql_timestamp(float8);
-- back to "normal" 
reset role;
drop role caql_luser;
drop role caql_super_luser;
